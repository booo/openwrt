Index: backports-4.19.161-1/net/mac80211/rate.c
===================================================================
--- backports-4.19.161-1.orig/net/mac80211/rate.c
+++ backports-4.19.161-1/net/mac80211/rate.c
@@ -520,9 +520,7 @@ static void rate_idx_match_mask(s8 *rate
 
 		*rate_idx = 0;
 		/* keep protection flags */
-		*rate_flags &= (IEEE80211_TX_RC_USE_RTS_CTS |
-				IEEE80211_TX_RC_USE_CTS_PROTECT |
-				IEEE80211_TX_RC_USE_SHORT_PREAMBLE);
+		*rate_flags &= (IEEE80211_TX_RC_USE_SHORT_PREAMBLE);
 
 		*rate_flags |= IEEE80211_TX_RC_MCS;
 		if (chan_width == NL80211_CHAN_WIDTH_40)
@@ -545,9 +543,7 @@ static void rate_idx_match_mask(s8 *rate
 		/* also try the legacy rates. */
 		*rate_idx = 0;
 		/* keep protection flags */
-		*rate_flags &= (IEEE80211_TX_RC_USE_RTS_CTS |
-				IEEE80211_TX_RC_USE_CTS_PROTECT |
-				IEEE80211_TX_RC_USE_SHORT_PREAMBLE);
+		*rate_flags &= (IEEE80211_TX_RC_USE_SHORT_PREAMBLE);
 		if (rate_idx_match_legacy_mask(rate_idx, sband->n_bitrates,
 					       mask))
 			return;
@@ -569,9 +565,7 @@ static void rate_idx_match_mask(s8 *rate
 
 		*rate_idx = 0;
 		/* keep protection flags */
-		*rate_flags &= (IEEE80211_TX_RC_USE_RTS_CTS |
-				IEEE80211_TX_RC_USE_CTS_PROTECT |
-				IEEE80211_TX_RC_USE_SHORT_PREAMBLE);
+		*rate_flags &= (IEEE80211_TX_RC_USE_SHORT_PREAMBLE);
 
 		*rate_flags |= IEEE80211_TX_RC_MCS;
 
@@ -654,10 +648,6 @@ static void rate_fixup_ratelist(struct i
 		if (rates[i].flags & IEEE80211_TX_RC_MCS) {
 			WARN_ON(rates[i].idx > 76);
 
-			if (!(rates[i].flags & IEEE80211_TX_RC_USE_RTS_CTS) &&
-			    info->control.use_cts_prot)
-				rates[i].flags |=
-					IEEE80211_TX_RC_USE_CTS_PROTECT;
 			continue;
 		}
 
@@ -685,11 +675,6 @@ static void rate_fixup_ratelist(struct i
 		    rate->flags & IEEE80211_RATE_SHORT_PREAMBLE)
 			rates[i].flags |= IEEE80211_TX_RC_USE_SHORT_PREAMBLE;
 
-		/* set up G protection */
-		if (!(rates[i].flags & IEEE80211_TX_RC_USE_RTS_CTS) &&
-		    info->control.use_cts_prot &&
-		    rate->flags & IEEE80211_RATE_ERP_G)
-			rates[i].flags |= IEEE80211_TX_RC_USE_CTS_PROTECT;
 	}
 }
 
Index: backports-4.19.161-1/drivers/net/wireless/ath/ath9k/xmit.c
===================================================================
--- backports-4.19.161-1.orig/drivers/net/wireless/ath/ath9k/xmit.c
+++ backports-4.19.161-1/drivers/net/wireless/ath/ath9k/xmit.c
@@ -1299,11 +1299,11 @@ static void ath_buf_set_rate(struct ath_
 		}
 
 		if (rts || rates[i].flags & IEEE80211_TX_RC_USE_RTS_CTS) {
-			info->rates[i].RateFlags |= ATH9K_RATESERIES_RTS_CTS;
-			info->flags |= ATH9K_TXDESC_RTSENA;
+			//info->rates[i].RateFlags |= ATH9K_RATESERIES_RTS_CTS;
+			//info->flags |= ATH9K_TXDESC_RTSENA;
 		} else if (rates[i].flags & IEEE80211_TX_RC_USE_CTS_PROTECT) {
-			info->rates[i].RateFlags |= ATH9K_RATESERIES_RTS_CTS;
-			info->flags |= ATH9K_TXDESC_CTSENA;
+			//info->rates[i].RateFlags |= ATH9K_RATESERIES_RTS_CTS;
+			//info->flags |= ATH9K_TXDESC_CTSENA;
 		}
 
 		if (rates[i].flags & IEEE80211_TX_RC_40_MHZ_WIDTH)
Index: backports-4.19.161-1/drivers/net/wireless/ath/ath9k/ar9003_mac.c
===================================================================
--- backports-4.19.161-1.orig/drivers/net/wireless/ath/ath9k/ar9003_mac.c
+++ backports-4.19.161-1/drivers/net/wireless/ath/ath9k/ar9003_mac.c
@@ -106,8 +106,9 @@ ar9003_set_txdesc(struct ath_hw *ah, voi
 		| (i->keyix != ATH9K_TXKEYIX_INVALID ? AR_DestIdxValid : 0)
 		| (i->flags & ATH9K_TXDESC_LOWRXCHAIN ? AR_LowRxChain : 0)
 		| (i->flags & ATH9K_TXDESC_CLRDMASK ? AR_ClrDestMask : 0)
-		| (i->flags & ATH9K_TXDESC_RTSENA ? AR_RTSEnable :
-		   (i->flags & ATH9K_TXDESC_CTSENA ? AR_CTSEnable : 0)));
+		| 0);
+		//| (i->flags & ATH9K_TXDESC_RTSENA ? AR_RTSEnable :
+		//   (i->flags & ATH9K_TXDESC_CTSENA ? AR_CTSEnable : 0)));
 
 	ctl12 = (i->keyix != ATH9K_TXKEYIX_INVALID ?
 		 SM(i->keyix, AR_DestIdx) : 0)
